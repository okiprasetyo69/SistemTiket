<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAB/AGQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        9FHlninMueenvTgCw4HvQtvx8xzWPJ2Aq72LtzxUc5+X8avG1Umo7q23xlf5UcrRXQrQsUQMwqVpY5E5
        /Kmvtjj2syoqjufSuR+JXxl8I/B7SJNQ8V+JNF8O2MahzNqN4luu0nAOGOTk8DA5wfSjS+pJ072wkPy+
        vrUE9iU9PqK8htv+CiHwEkiZpPjR8LbdUwC0/iezi259d0gx9T07133wt+OXgX44280ngnxt4R8YR2wB
        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
        ESfMor7j/9k=
</value>
  </data>
</root>